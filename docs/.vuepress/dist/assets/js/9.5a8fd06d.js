(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{293:function(t,a,s){t.exports=s.p+"assets/img/Oculus.43872ce6.png"},294:function(t,a,s){t.exports=s.p+"assets/img/OculusIntergration.aeb64aeb.jpg"},313:function(t,a,s){"use strict";s.r(a);var e=s(14),l=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"oculus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oculus"}},[t._v("#")]),t._v(" Oculus "),a("Badge",{attrs:{text:"Oculus主题"}})],1),t._v(" "),a("h2",{attrs:{id:"有关vr一体机的抗锯齿一些设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有关vr一体机的抗锯齿一些设置"}},[t._v("#")]),t._v(" 有关VR一体机的抗锯齿一些设置 "),a("Badge",{attrs:{text:"抗锯齿",type:"warning"}})],1),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("下面是相关设置\n")])])]),a("p",[a("img",{attrs:{src:s(293),alt:"设置DPI参数"}})]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("1.如果是URP渲染管线下，请关闭Allow DynamicResolution，并且设置DPI的每英寸的像素点如上图\n2.请对应使用合适的抗锯齿算法如MSAA FXAA SMAA\n3.UI的字体使用TextPro\n4.修改RenderScale 的值（默认是1，注意URP渲染管线下在universal render pipeline asset中设置）\n5.使用MeshBaker工具将物体合并纹理Mesh合并，不动的物体走静态，带动画及移动的物体看项目需求走Dynamic Bactching.(带动画的Mesh Baker合并注意使用SkinMeshRender)\n")])])]),a("p",[t._v("以上的方法均有性能的开销，请根据个人的项目调整合适的数值")]),t._v(" "),a("h2",{attrs:{id:"有关oculus-quest中实测v47-oculus-intergration所遇到的一些问题总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有关oculus-quest中实测v47-oculus-intergration所遇到的一些问题总结"}},[t._v("#")]),t._v(" 有关Oculus Quest中实测V47 Oculus intergration所遇到的一些问题总结 "),a("Badge",{attrs:{text:"Oculus intergration v47",type:"warning"}})],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("UI射线触发大致流程\n(1)EventSystem 需要挂在CanvasModule\n(2)Cavas挂在在一个空物体的下方，该物体挂在RayInteractable脚本及Pointable Canvas\n(3)Canvas 同级创建两个空物体一个Collider，一个PlaneSurface,注意的是Collider挂在colliderSurface及BoxCollider,注意使用EditCollider调整碰撞器的大小与Canvas一致，PalneSurface只需要挂载PlaneSurface就行")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("  下面是引用关系图\n")])])])])]),t._v(" "),a("p",[a("img",{attrs:{src:s(294),alt:"OculusIntergration"}})]),t._v(" "),a("h2",{attrs:{id:"oculus-安装官方metric-tools性能分析工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oculus-安装官方metric-tools性能分析工具"}},[t._v("#")]),t._v(" Oculus 安装官方Metric Tools性能分析工具")]),t._v(" "),a("ul",[a("li",[t._v("Mac版配置ADB(自行去官网下载Metric Tools APK)")]),t._v(" "),a("li",[a("ul",[a("li",[t._v("1.echo $HOME（进入当前用户home目录）")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("2.touch .bash_profile（创建.bash_profile文件）")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("3.open -e .bash_profile（打开.bash_profile文件）")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("4.export PATH=${PATH}:你电脑sdk的路径/tools:你电脑sdk的路径platform-tools（编辑打开的.bash_profile文件，这里我是使用了UnityHub下AndroidSDK的tool跟platform-tools）")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("5.source .bash_profile")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("6.adb version(检测是否配置成功)")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("7.adb install XXXXX(Metric Tools Mac端APK路径)")])])])])])}),[],!1,null,null,null);a.default=l.exports}}]);