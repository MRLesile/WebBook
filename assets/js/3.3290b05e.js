(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{274:function(r,s,t){r.exports=t.p+"assets/img/shadergraph1.e46a1935.jpg"},275:function(r,s,t){r.exports=t.p+"assets/img/shadergraph2.96792fff.jpg"},276:function(r,s,t){r.exports=t.p+"assets/img/shadergraph3.d612b33a.jpg"},277:function(r,s,t){r.exports=t.p+"assets/img/shadergraph4.103d65dd.jpg"},278:function(r,s,t){r.exports=t.p+"assets/img/shadergraph5.7ad37120.jpg"},279:function(r,s,t){r.exports=t.p+"assets/img/shadergraph6.65a82633.jpg"},280:function(r,s,t){r.exports=t.p+"assets/img/shadergraph7.a02101e7.jpg"},281:function(r,s,t){r.exports=t.p+"assets/img/shadergraph8.214312ae.jpg"},282:function(r,s,t){r.exports=t.p+"assets/img/shadergraph9.c18a509e.jpg"},329:function(r,s,t){"use strict";t.r(s);var a=t(14),e=Object(a.a)({},(function(){var r=this,s=r._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[s("h1",{attrs:{id:"unity-shadergraph实现外描边透明效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unity-shadergraph实现外描边透明效果"}},[r._v("#")]),r._v(" Unity ShaderGraph实现外描边透明效果"),s("Badge",{attrs:{text:"菲尼尔反射实现"}})],1),r._v(" "),s("h2",{attrs:{id:"首先是urp环境下新建一个lit-shader-graph"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首先是urp环境下新建一个lit-shader-graph"}},[r._v("#")]),r._v(" 首先是URP环境下新建一个Lit Shader Graph")]),r._v(" "),s("p",[s("img",{attrs:{src:t(274),alt:"基本面板"}})]),r._v(" "),s("ul",[s("li",[r._v("新建一个MainColor的颜色变量与我们的Base Color连接")]),r._v(" "),s("li",[r._v("选择Graph Inspector面板中的GraphSetting中Surface Type选择透明Transparent")])]),r._v(" "),s("p",[s("img",{attrs:{src:t(275),alt:"GraphSetting"}})]),r._v(" "),s("h2",{attrs:{id:"接下来就是我们的菲尼尔反射的node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接下来就是我们的菲尼尔反射的node"}},[r._v("#")]),r._v(" 接下来就是我们的菲尼尔反射的Node")]),r._v(" "),s("p",[s("img",{attrs:{src:t(276),alt:"Fresnel"}})]),r._v(" "),s("ul",[s("li",[s("p",[r._v("首先，这些反射仅出现在球体的边缘周围（即当其表面处于掠射角时），其次，随着材质的光滑度上升，这些反射变得更加明显和清晰。")])]),r._v(" "),s("li",[s("p",[r._v("在标准着色器中，不能直接控制菲涅耳效应。实际上，它是通过材质的光滑度间接控制的。光滑的表面将呈现出更强的菲涅耳效应，而完全粗糙的表面将没有菲涅耳效应。")])]),r._v(" "),s("li",[s("p",[r._v("ShaderGraph中Node中已经封装过Fresnel Effect我们只需要Create该Node就行如下：\n"),s("img",{attrs:{src:t(277),alt:"Fresnel"}})])]),r._v(" "),s("li",[s("p",[r._v("接下来我们需要创建两个变量一个Fresnel Power控制菲尼尔反射的强度另一个控制Fresnel反射Color与Fresnel效果Out的Color相乘给予我们自发光就完成了菲尼尔的反射效果Node如下：\n"),s("img",{attrs:{src:t(278),alt:"Fresnel"}}),r._v(" "),s("img",{attrs:{src:t(279),alt:"Fresnel"}})])]),r._v(" "),s("li",[s("p",[r._v("最后我们总体调整一下透明度的问题需要用到Add Node函数如下：\n"),s("img",{attrs:{src:t(280),alt:"Fresnel"}})])]),r._v(" "),s("li",[s("p",[r._v("更改对应Shader生成的材质球参数调整一下你想要的颜色及强度吧这是我需要的外描边透明效果：\n"),s("img",{attrs:{src:t(281),alt:"Fresnel"}}),r._v(" "),s("img",{attrs:{src:t(282),alt:"Fresnel"}})])])])])}),[],!1,null,null,null);s.default=e.exports}}]);